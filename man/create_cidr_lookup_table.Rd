% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create-cidr-tbl.R
\name{create_cidr_lookup_table}
\alias{create_cidr_lookup_table}
\title{Creates a CIDR lookup table}
\usage{
create_cidr_lookup_table(
  pgcon,
  tbl_name,
  drop = FALSE,
  xdf,
  entity_col = "entity",
  cidr_col = "cidr"
)
}
\arguments{
\item{pgcon}{a PostgreSQL DBI connection}

\item{tbl_name}{name of the CIDR table (valid PG table name syntax)}

\item{drop}{drop existing CIDR table if it has the same name? Defaults to \code{FALSE}.}

\item{xdf}{Data frame to use to populate the table or a path to a CSV file.
If a path it will be \code{\link[=path.expand]{path.expand()}}ed.}

\item{entity_col}{Name of the column that holds the entity reference name for the CIDR}

\item{cidr_col}{Name of the column that holds the CIDR block}
}
\description{
The columns named in \code{entity_col} and \code{cidr_col} \emph{must exist} in the
data frame or CSV file. All \verb{_name}s must be valid PostgreSQL syntax for
said names. Setting \code{drop=TRUE} is \emph{destructive}.\cr
\cr
NOTE that \code{cidr_col} is a primary key. Thus duplicate CIDRs are not allowed
and it's up to you to ensure that.
}
\examples{
\dontrun{
DBI::dbConnect(
  odbc::odbc(),
  driver = "/usr/local/lib/psqlodbca.so",
  Database = "working",
  Host = "localhost"
) -> con

create_cidr_lookup_table(
  pgcon = con,
  tbl_name = "amazon_cidrs",
  drop = TRUE,
  xdf = system.file("extdat", "amzn-cidrs.csv", package = "pgcidr"),
)

create_ip_source_table(
  pgcon = con,
  tbl_name = "weblog",
  drop = TRUE,
  xdf = system.file("extdat", "weblog.csv", package = "pgcidr")
)

find_ips_in_cidrs(
  con, "weblog", "amazon_cidrs"
)

}
}
