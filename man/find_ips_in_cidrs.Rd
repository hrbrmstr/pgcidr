% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find-ips-in-cidrs.R
\name{find_ips_in_cidrs}
\alias{find_ips_in_cidrs}
\title{Finds IPs in CIDR blocks}
\usage{
find_ips_in_cidrs(pgcon, ip_tbl, cidr_tbl, ip_col = "ip", cidr_col = "cidr")
}
\arguments{
\item{pgcon}{a PostgreSQL DBI connection}

\item{ip_tbl}{name of the IP table (valid PG table name syntax)}

\item{cidr_tbl}{name of the CIDR table (valid PG table name syntax)}

\item{ip_col}{Name of the column that holds the IP addresses in \code{ip_tbl}}

\item{cidr_col}{Name of the column that holds the CIDR block in \code{cidr_tbl}}
}
\description{
After you use \code{\link[=create_cidr_lookup_table]{create_cidr_lookup_table()}} and \code{\link[=create_ip_source_table]{create_ip_source_table()}}
use this function to do the lookup.
}
\examples{
\dontrun{
DBI::dbConnect(
  odbc::odbc(),
  driver = "/usr/local/lib/psqlodbca.so",
  Database = "working",
  Host = "localhost"
) -> con

create_cidr_lookup_table(
  pgcon = con,
  tbl_name = "amazon_cidrs",
  drop = TRUE,
  xdf = system.file("extdat", "amzn-cidrs.csv", package = "pgcidr"),
)

create_ip_source_table(
  pgcon = con,
  tbl_name = "weblog",
  drop = TRUE,
  xdf = system.file("extdat", "weblog.csv", package = "pgcidr")
)

find_ips_in_cidrs(
  con, "weblog", "amazon_cidrs"
)

}
}
