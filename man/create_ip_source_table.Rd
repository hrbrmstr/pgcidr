% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create-ip-tbl.R
\name{create_ip_source_table}
\alias{create_ip_source_table}
\title{Creates a IP address table}
\usage{
create_ip_source_table(pgcon, tbl_name, drop = FALSE, xdf, ip_col = "ip")
}
\arguments{
\item{pgcon}{a PostgreSQL DBI connection}

\item{tbl_name}{name of the IP table (valid PG table name syntax)}

\item{drop}{drop existing IP table if it has the same name? Defaults to \code{FALSE}.}

\item{xdf}{Data frame to use to populate the table or a path to a CSV file.
If a path it will be \code{\link[=path.expand]{path.expand()}}ed.}

\item{ip_col}{Name of the column that holds the IP addresses}
}
\description{
The column named in \code{ip_col} \verb{*must exist* in the data frame or CSV file. All}_name\verb{s must be valid PostgreSQL syntax for said names. Setting }drop=TRUE` is \emph{destructive}.
}
\examples{
\dontrun{
DBI::dbConnect(
  odbc::odbc(),
  driver = "/usr/local/lib/psqlodbca.so",
  Database = "working",
  Host = "localhost"
) -> con

create_cidr_lookup_table(
  pgcon = con,
  tbl_name = "amazon_cidrs",
  drop = TRUE,
  xdf = system.file("extdat", "amzn-cidrs.csv", package = "pgcidr"),
)

create_ip_source_table(
  pgcon = con,
  tbl_name = "weblog",
  drop = TRUE,
  xdf = system.file("extdat", "weblog.csv", package = "pgcidr")
)

find_ips_in_cidrs(
  con, "weblog", "amazon_cidrs"
)

}
}
